# 1) Initial configuration
dimension 3
units lj
atom_style bond
boundary p p p 

# 2) Read input configuraiton
read_data init10.data 
velocity all create 1 42 
group poly1 molecule 1 
group poly2 molecule 2
group poly3 molecule 3 
group poly4 molecule 4 
group poly5 molecule 5 
group poly6 molecule 6 
group poly7 molecule 7 
group poly8 molecule 8 
group poly9 molecule 9
group poly10 molecule 10


# 3) bonds(harmonic) + pair interactions setting 
pair_style none 
bond_style harmonic 
bond_coeff 1 90 10.  # bond type
thermo 100  

# 4) remove overlap between polymer and obstacles
minimize 1e-5 1e-5 1000 1000
reset_timestep  0

#### Set up a compute for R_g
variable t equal step
# Define computes for calculating the gyration radius for each polymer individually
compute myRG2compute_poly1 poly1 gyration
compute myRG2compute_poly2 poly2 gyration
compute myRG2compute_poly3 poly3 gyration
compute myRG2compute_poly4 poly4 gyration
compute myRG2compute_poly5 poly5 gyration
compute myRG2compute_poly6 poly6 gyration
compute myRG2compute_poly7 poly7 gyration
compute myRG2compute_poly8 poly8 gyration
compute myRG2compute_poly9 poly9 gyration
compute myRG2compute_poly10 poly10   gyration

thermo_style    custom step c_myRG2compute_poly1 c_myRG2compute_poly2 c_myRG2compute_poly3 c_myRG2compute_poly4 c_myRG2compute_poly5 c_myRG2compute_poly6 c_myRG2compute_poly7 c_myRG2compute_poly8 c_myRG2compute_poly9 c_myRG2compute_poly10 temp pe ke etotal

# 5) Do the integration with langevin
fix 1 all nve
fix 2 all langevin 1.0 1.0 0.005 42
timestep 0.001
dump 1 all custom 1000 dump_11.3B.r10.lammpstrj id mol type xu yu zu
dump_modify 1 format line "%d %d %d %.8g %.8g %.8g %.8g"  # my file will be appended not overwritten if I restart the simulation, d=integer, .8g = 8 digits

# 5) run the simulation
run 2000000

